#!/bin/bash

# chkconfig: 2345 80 20
# description: Kafka init script
# processname: java(jdk1.8)

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
START_SCRIPT="/data/kafka_current/bin/kafka-server-start -daemon /data/kafka_current/etc/kafka/server.properties"
STOP_SCRIPT="/data/kafka_current/bin/kafka-server-stop"

NAME=kafka
DESC="Kafka server"
PID_FILE=/data/kafka-data/kafka.pid
GC_PATH=/data/kafka-data/kafka-gc.log
DODTIME=3

# Export JVM Option
# KAFKA_OPTS
HOST_IP=`ip addr show interface|grep inet|head -n 1|awk '{print $2}'|cut -d /  -f1`
JMX_PORT=port
export KAFKA_HEAP_OPTS="-server -Xmx16g -Xms16g -XX:MetaspaceSize=96m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -Djava.awt.headless=true -Xloggc:${GC_PATH} -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Djava.rmi.server.hostname=${
} -Dcom.sun.management.jmxremote.port=${JMX_PORT} -Dcom.sun.management.jmxremote.rmi.port=${JMX_PORT}"
# Checks if the given pid represents a live process.
# Returns 0 if the pid is a live process, 1 otherwise
check_process_alive() {
   local pid="$1"
   ps -fp $pid | grep $pid | grep kafka > /dev/null 2>&1
}

check_pidfile() {
  local pidfile="$1" # IN
  local pid

  pid=`cat "$pidfile" 2>/dev/null`
  if [ "$pid" = '' ]; then
    # The file probably does not exist or is empty.
    return 1
  fi

  set -- $pid
  pid="$1"

  check_process_alive $pid
}

check_process_kill() {
    local pid="$1"    # IN
    local signal="$2" # IN
    local second

    kill -$signal $pid 2>/dev/null

    # Wait a bit to see if the dirty job has really been done
    for second in 0 1 2 3 4 5 6 7 8 9 10; do
      if check_process_alive "$pid"; then
        # Success
        return 0
      fi

      sleep 1
    done

    # Timeout
    return 1
}
stop_pidfile() {
    local pidfile="$1" # IN
    local pid

    pid=`cat "$pidfile" 2>/dev/null`
    if [ "$pid" = '' ]; then
      # The file probably does not exist or is empty. Success
      return 0
    fi

    set -- $pid
    pid="$1"

    # First try the easy way
    if process_kill "$pid" 15; then
      return 0
    fi

    # Otherwise try the hard way
    if process_kill "$pid" 9; then
      return 0
    fi

    return 1
}


start() {
  /bin/bash -c "${START_SCRIPT}"
  pid=`ps ax | grep -i 'kafka.Kafka' | grep -v grep | awk '{print $1}'`
  echo $pid > $PID_FILE
}
stop() {
  /bin/bash -c "${STOP_SCRIPT}" >/dev/null 2>&1 || echo 0 >/dev/null
  while check_pidfile $PID_FILE
  do
    echo "$NAME is still running, wait..."
    sleep 1
  done
}

case "$1" in
    start)
      start
      ;;
    stop)
      stop
      ;;
    force-stop)
      echo -n "Forcefully stopping $DESC: "
      stop_pidfile $PID_FILE
      if check_pidfile $PID_FILE ; then
        echo "$NAME."
      else
        echo " ERROR."
      fi
      ;;
    force-reload|condrestart|try-restart)
      # check wether $DAEMON is running. If so, restart
      check_pidfile $PID_FILE && $0 restart
      ;;
    restart|reload)
      echo -n "Restarting $DESC: "
      echo ""
      stop
      $0 start
      ;;
    status)
      echo -n "$NAME is "
      if check_pidfile $PID_FILE ;  then
        echo "running"
      else
        echo "not running."
        exit 1
      fi
      ;;
    *)
      N=/etc/init.d/$NAME
      # echo "Usage: $N {start|stop|restart|reload|force-reload}" >&2
      echo "Usage: $N {start|stop|restart|status}" >&2

      exit 1
      ;;
esac

exit 0
